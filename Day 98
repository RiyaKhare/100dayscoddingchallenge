//Next Permutation

class Solution {
    public void nextPermutation(int[] A) {
        if(A == null || A.length <= 1) return;
    int i = A.length - 2;
    while(i >= 0 && A[i] >= A[i + 1]) i--;
    if(i >= 0) {                           
        int j = A.length - 1;              
        while(A[j] <= A[i]) j--;           
        swap(A, i, j);                     
    }
    reverse(A, i + 1, A.length - 1);
    }
    public void swap(int[] A, int i, int j) {
    int tmp = A[i];
    A[i] = A[j];
    A[j] = tmp;
}

public void reverse(int[] A, int i, int j) {
    while(i < j) swap(A, i++, j--);
}
}
//Test Cases-
Example 1:

Input: nums = [1,2,3]
Output: [1,3,2]
Example 2:

Input: nums = [3,2,1]
Output: [1,2,3]
Example 3:

Input: nums = [1,1,5]
Output: [1,5,1]
