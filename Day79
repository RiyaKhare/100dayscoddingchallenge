//Merge Two Sorted Lists


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {

        if(l1 == null){
            return l2;
        }

        if(l2 == null){
            return l1;
        }

        if(l1.val <= l2.val){
           return solve(l1, l2);
        }else{
            return solve(l2, l1);
        }
   
    }

    ListNode solve(ListNode l1, ListNode l2){

        if(l1.next == null){
            l1.next = l2;
            return l1;
        }

        ListNode curr1 = l1;
        ListNode next1 = curr1.next;
        ListNode curr2 = l2;
        ListNode next2 = curr2.next;


        while(next1 != null && curr2 != null){

            if(curr2.val >= curr1.val && curr2.val <= next1.val){
                curr1.next  =curr2;
                next2 = curr2.next;
                curr2.next = next1;

                curr1 = curr2;
                curr2 = next2;
            }else{

                curr1 = next1;
                next1 = next1.next;

                if(next1 == null){
                    curr1.next = curr2;
                    return l1;
                }
            }
        }
        return l1;
    }
}


//Output-
Example 1:
Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]
Example 2:

Input: list1 = [], list2 = []
Output: []
Example 3:

Input: list1 = [], list2 = [0]
Output: [0]
 
