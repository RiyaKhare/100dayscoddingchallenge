//Topic- Single Number
//Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

class Solution {
    public int singleNumber(int[] nums) {
        
     int i=0;
        ArrayList<Integer> list=new ArrayList<Integer>();
        for( i=0;i<nums.length;i++){
            if(list.contains(nums[i])){
              int n=list.indexOf(nums[i]);
             list.remove(n);
            }else if(!list.contains(nums[i])){
                list.add(nums[i]);
            }                     
        }
         return  list.get(0);  
    }
}

//Test Cases-
Example 1:

Input: nums = [2,2,1]
Output: 1
Example 2:

Input: nums = [4,1,2,1,2]
Output: 4
Example 3:

Input: nums = [1]
Output: 1
 
